<template>
	<view class="map-box">
		<map
			id="map"
			style="width: 100vw; height: 100vh;"
			:latitude="latitude"
			:longitude="longitude"
			:markers="markers"
			:polyline="polyline"
			:include-points="includePoints"
			show-location
		></map>
		<view class="picker-address"></view>
	</view>
</template>

<script>
var QQMapWX = require('@/common/utils/qqmap-wx-jssdk1.2/qqmap-wx-jssdk.js');
var qqmapsdk;
export default {
	data() {
		return {
			longitude: 108.921672,
			latitude: 34.250646,
			markers: [
				{
					id: 0,
					latitude: 39.98406,
					longitude: 116.30752,
					iconPath: '/static/imgs/order/address_loaction.png',
					width: 50,
					height: 55
				}
			],
			polyline: [],
			distance: 0,
			includePoints: [{ longitude: 108.921672, latitude: 34.250646 }, { latitude: 39.98406, longitude: 116.30752 }]
		};
	},
	onLoad() {
		// 实例化API核心类
		qqmapsdk = new QQMapWX({
			key: 'ZW4BZ-A5YRD-54D4A-PCT5M-YJBHO-LTBBX'
		});
	},
	onReady() {
		this.drawPolyline();
	},
	onShow() {},
	methods: {
		drawPolyline() {
			var _this = this;
			//调用距离计算接口
			qqmapsdk.direction({
				mode: 'driving', //可选值：'driving'（驾车）、'walking'（步行）、'bicycling'（骑行），不填默认：'driving',可不填
				//from参数不填默认当前地址
				from: '', //e.detail.value.start,
				to: {
					latitude: 39.98406,
					longitude: 116.30752
				}, //e.detail.value.dest,
				success: function(res) {
					console.log('asflasflk', res);
					var ret = res;
					var coors = ret.result.routes[0].polyline,
						pl = [];
					//坐标解压（返回的点串坐标，通过前向差分进行压缩）
					var kr = 1000000;
					for (var i = 2; i < coors.length; i++) {
						coors[i] = Number(coors[i - 2]) + Number(coors[i]) / kr;
					}
					//将解压后的坐标放入点串数组pl中
					for (var i = 0; i < coors.length; i += 2) {
						pl.push({ latitude: coors[i], longitude: coors[i + 1] });
					}
					console.log(pl);
					//设置polyline属性，将路线显示出来,将解压坐标第一个数据作为起点
					_this.distance = ret.result.routes[0].distance; //距离终点距离
					_this.includePoints = pl; //视图包含坐标
					// _this.markers =
					_this.latitude = pl[0].latitude;
					_this.longitude = pl[0].longitude;
					_this.polyline = [
						{
							points: pl,
							color: '#22AC38',
							width: 4
						}
					];
				},
				fail: function(error) {
					console.error(error);
				},
				complete: function(res) {
					console.log(res);
				}
			});
		}
	}
};
</script>

<style></style>
